"""сÐcreate test_progress

Revision ID: 1660d43fd0db
Revises: 23f00adc340f
Create Date: 2025-01-12 03:31:59.866263

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "1660d43fd0db"
down_revision: Union[str, None] = "23f00adc340f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "test_progress",
        sa.Column("test_id", sa.Integer(), nullable=False),
        sa.Column("participant_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("status", sa.Integer(), nullable=True),
        sa.Column("count_question", sa.Integer(), nullable=True),
        sa.Column("correct_answer", sa.Integer(), nullable=True),
        sa.Column("deadline_date", sa.DateTime(), nullable=True),
        sa.Column("timelimit", sa.Interval(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["participant_id"],
            ["profile.id"],
        ),
        sa.ForeignKeyConstraint(
            ["test_id"],
            ["test.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("testprogress")
    op.add_column(
        "test_progress_result",
        sa.Column("test_progress_id", sa.Integer(), nullable=False),
    )
    op.create_foreign_key(
        None,
        "test_progress_result",
        "test_progress",
        ["test_progress_id"],
        ["id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "test_progress_result", type_="foreignkey")
    op.drop_column("test_progress_result", "test_progress_id")
    op.create_table(
        "testprogress",
        sa.Column(
            "test_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "participant_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("status", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "count_question", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "correct_answer", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "deadline_date",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "timelimit",
            postgresql.INTERVAL(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["participant_id"],
            ["profile.id"],
            name="testprogress_participant_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["test_id"], ["test.id"], name="testprogress_test_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="testprogress_pkey"),
    )
    op.drop_table("test_progress")
    # ### end Alembic commands ###
